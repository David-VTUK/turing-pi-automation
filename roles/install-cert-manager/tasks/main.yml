# roles/install-cert-manager/tasks/main.yml
- name: Load secrets
  ansible.builtin.include_vars: ../vault/secrets.yml

- name: Add Jetstack repository
  kubernetes.core.helm_repository:
    name: jetstack
    repo_url: https://charts.jetstack.io

- name: Install Cert-Manager helm chart
  kubernetes.core.helm:
    name: cert-manager
    chart_ref: jetstack/cert-manager
    chart_version: "{{ cert_manager_version }}"
    release_namespace: "{{ cert_manager_namespace }}"
    create_namespace: true
    wait: true
    values:
      installCRDs: true
      podDNSConfig:
        nameservers:
          - 1.1.1.1
          - 1.0.0.1
      config:
        apiVersion: controller.config.cert-manager.io/v1alpha1
        kind: ControllerConfiguration
        enableGatewayAPI: true
  register: cert_manager_install

- name: Create secret for cert-manager
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: azure-dns-secret
        namespace: cert-manager
      stringData:
        azure_client_secret: "{{ azure_client_secret }}"


- name: Add cert-manager cluster issuer
  kubernetes.core.k8s:
    definition:
      apiVersion: cert-manager.io/v1
      kind: ClusterIssuer
      metadata:
        name: letsencrypt-prod
        namespace: cert-manager
      spec:
        acme:
          server: https://acme-v02.api.letsencrypt.org/directory
          email: "{{ letsencrypt_email }}"
          privateKeySecretRef:
            name: letsencrypt-prod
          solvers:
            - dns01:
                azureDNS:
                  clientID: "{{ azure_client_id }}"
                  clientSecretSecretRef:
                    name: azure-dns-secret
                    key: azure_client_secret
                  subscriptionID: "{{ azure_subscriptionID }}"
                  tenantID: "{{ azure_tenantID }}"
                  resourceGroupName: "{{ azure_resourceGroupName }}"
                  hostedZoneName: "{{ azure_dns_zone }}"
                  environment: AzurePublicCloud

- name: Create directories for application files
  ansible.builtin.file:
    path: ../argocd-apps/cert-manager
    state: directory
    mode: '0755'

- name: Generate ArgoCD application
  ansible.builtin.template:
    src: ../argocd-apps/template/template.yml.j2
    dest: ../argocd-apps/cert-manager/manifest.yml
    mode: '0644'
  vars:
    app_name: "cert-manager"
    argocd_namespace: "argocd"
    chart_repo_url: "https://charts.jetstack.io"
    target_revision: "HEAD"
    app_path: "argocd-apps/argocd"
    target_server: "https://kubernetes.default.svc"
    app_namespace: "{{ cert_manager_namespace }}"
    prune: "true"
    self_heal: "true"
    app_chart_name: "argo/argocd"
    app_chart_version: "{{ cert_manager_version }}"


- name: Extract existing values from chart
  ansible.builtin.shell: set -o pipefail && helm get values cert-manager --namespace {{ cert_manager_namespace }} -o yaml | grep -v 'USER-SUPPLIED VALUES:'
  register: helm_values_output
  changed_when: false

- name: Write Helm values to files
  ansible.builtin.copy:
    content: "{{ helm_values_output.stdout }}"
    dest: "../argocd-apps/cert-manager/values.yaml"
    mode: '0644'
